08-08-2024:


Redirect :
Note: Use the correct file name while redirecting command output to a file. If there is a
n existing file with the same name, the redirected command will delete the contents of that file and then 
it may be overwritten.”

If you do not want a file to be overwritten but want to add more content to an existing file, then you 
should use ‘>>‘ operator.


Redirect(>):
use: 
ls>file1.txt

Syntax:  ls file1.txt > file2.txt    Here  copy the file1 content and if any existing files are there overwrite the 
                                     file delete existing files adding the file1.txt ..

append(>>):
cat file4.txt   -->12345
 Syntax : ls file1.txt >> file2.txt    if you want to add more content in the file to without deleting existing file..
                                       you can use this.
[ redirect & appends are used to store the outpot of command of file]

----------------------------------------------------PIPE (|)---------------------------------------------------------------------------

pipe(|)   --> [Pipe is used to output of one commend as an input of other commend]

# Display the numbers 5 to 10.

syntax : head file2.txt | tail -n 6    -> it will display 6 7 8 9 10  [first command output is seound command input]

# if you want to display only one number. exapmlw (23)

head -n 23 file2.txt | tail -n 1


head number | tail -n 5

head -n 60 number | tail -n 6    [55,56,57,58,59,60]

---------------------------------------------------------SORT&UNIQUE-----------------------------------------------------------------------

sort:

organize element assending or dessing order..
-->sort file.txt
--> sort file.txt | uniq   --> [uniq do delete duplicate numbers]
-->sort -r file.txt |uniq   --> reverse order



uniqe:
delete duplicate numbers give the unique elements.uniqe not work without sort..

sort file2.txt | uniq

----------------------------------------COPY&MOVE-------------------------------------------------------------------------------------


copy:

Syntax: cp target destination              --> copy the file source to destination and if any content is there it will overwrite ..

cp file.txt num
cp -i    cp -i file1.txt file2.txt                       (i- i is asking for permmission go for overwrite or not?0
cp -p    cp -p file1.txt file2.txt                        (p- permission)

cp -r    cp -r file1.txt file2.txt                       (r- recursively)



move: (cut&past)

mv file.txt file2.txt

-----------------------------------------------------------------------------------------------------------------------------------------
                                   Practiceing on EC2 instance
fil content:
linux


window
mac
linux
w1indow
srinu
anil
w1indow
w1indow
w1indow
w1indow
ram
1
2
3
4
5
6
7
8
9
10
1



ubuntu@ip-172-31-36-205:~$ wc new3
 26  23 104 new3
ubuntu@ip-172-31-36-205:~$ wc -l new3
26 new3
ubuntu@ip-172-31-36-205:~$ wc -c new3
104 new3
ubuntu@ip-172-31-36-205:~$ ls
day1  new  new2  new3  rool1
ubuntu@ip-172-31-36-205:~$ touch file1.txt file2.text
ubuntu@ip-172-31-36-205:~$ vi file1.txt
ubuntu@ip-172-31-36-205:~$ vi file2.text
ubuntu@ip-172-31-36-205:~$ ls file1.txt > file2.text
ubuntu@ip-172-31-36-205:~$ cat file1.txt
this is file one..


hi guys

good morning.
ubuntu@ip-172-31-36-205:~$ cat file2.text
file1.txt
ubuntu@ip-172-31-36-205:~$ vi file2.text
ubuntu@ip-172-31-36-205:~$ ls file1.txt  >> file2.text
ubuntu@ip-172-31-36-205:~$ cat file1.txt
this is file one..


hi guys

good morning.
ubuntu@ip-172-31-36-205:~$ cat file2.text
this ia 2 nd file ..
file1.txt

ubuntu@ip-172-31-36-205:~$ head -n 12 new3 | tail -n 1
w1indow
ubuntu@ip-172-31-36-205:~$ head -n 10 new3 | tail -n 5
linux
w1indow
srinu
anil
w1indow
__________--------------------> copy&move
ubuntu@ip-172-31-36-205:~$ ls
day1  file1.txt  file2.text  new  new2  new3  rool1
ubuntu@ip-172-31-36-205:~$ cat file1.txt
this is file one..


hi guys

good morning.
ubuntu@ip-172-31-36-205:~$ cat file2.text
this ia 2 nd file ..
file1.txt
ubuntu@ip-172-31-36-205:~$ cp file1.txt  file2.text
ubuntu@ip-172-31-36-205:~$ cat file2.text
this is file one..


hi guys

good morning.
ubuntu@ip-172-31-36-205:~$ cat file1.txt
this is file one..


hi guys

good morning.
ubuntu@ip-172-31-36-205:~$ ls
day1  file1.txt  file2.text  new  new2  new3  rool1
ubuntu@ip-172-31-36-205:~$ vi file1.txt
ubuntu@ip-172-31-36-205:~$ mv file1.txt  file2.text
ubuntu@ip-172-31-36-205:~$ cat file2.text
this is file one..


hi guys


good morning.


move command is use to cut ad past
ubuntu@ip-172-31-36-205:~$ ls
day1  file2.text  new  new2  new3  rool1
ubuntu@ip-172-31-36-205:~$



-----------------------------------------------------------History:----------------------------------------------------------------------

 vim file1.txt
  399  vim file2
  400  ls
  401  ls >file1.txt
  402  ls
  403  ls file1.txt > file2.txt
  404  ls
  405  cat file2.txt
  406  ls file2 > file2.txt
  407  ls
  408  cat file2.txt
  409  ls
  410  ls file1.txt > fil2
  411  cat file2
  412  ls
  413  cat fil2
  414  ls fil2 file2 >> file2.txt
  415  cat file2.txt
  416  ls
  417  ls fil2 file2 > file2.txt
  418  cat file2.txt
  419  ls
  420  ls file1.txt > file2.txt
  421  cat file2.txt
  422  cat file1.txt
  423  cat file2
  424  ls file2 > file1.txt
  425  cat file1.txt
  426  ls file1.txt < file2.txt
  427  cat file1.txt
  428  cat file2.txt
  429  ls file2.txt < file1.txt
  430  cat file1.txt
  431  ls
  432  cat file2
  433  ls file1.txt > file2
  434  cat file2
  435  ls
  436  vi file2
  437  cat file2
  438  head fil2
  439  vim fil2
  440  head file2
  441  head file2 | tail 6
  442  head file2 | tail -n 6
  443  cat file2
  444  vim file2
  445  head file2
  446  tail file2
  447  head file2 | tail -n 6
  448  head -n 30 file2 | tail -n -7
  449  head -n 30 file2 | tail -n 7
  450  head -n 23
  451  head -n 23 file2
  452  head -n 23 file2 | tail -n 1
  453  head -n 55 file2 | tail -n 6
  454  head -n 35 file2 | tail -n 6
  455  ls
  456  cat file2.txt
  457  vim file2.txt
  458  sort file2.txt
  459  sort file2.txt | uniq
  460  sort -r file2.txt | uniq
  461  ls
  462  mkdir new
  463  cp file2 new/
  464  ls
  465  ls new/
  466  cat new/file2
  467  ls
  468  ls new/file2
  469  cp file1.txt new/
  470  ls new/
  471  cp file1.txt new/file2
  472  cat file2
  473  cat file1.txt
  474  cp file2 file1.txt
  475  cat file1.txt
  476  cat new/
  477  cd new/
  478  ls
  479  cd ..
  480  ls
  481  vi virat
  482  cp virat new/file1.txt
  483  cat new/file1.txt
  484  cp -i virat file2
  485  ls
  486  ls new/
  487  mv file2.txt new/
  488  ls
  489  mv file2 new/
  490  mv file1.txt new/
  491  ls
  492  mv virat new/
  493  mv fil2 new/
  494  ls
  495  mkdir update
  496  mv new/ update
  497  ls
  498  history
